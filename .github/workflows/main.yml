# 工作流名称
name: Auto-Generate VLESS from domains.txt

# 触发工作流的条件
on:
  # 1. 定时任务: 每 6 小时运行一次 (您可以按需修改)
  schedule:
    - cron: '0 */6 * * *'
    
  # 2. 允许在 GitHub Actions 页面手动触发
  workflow_dispatch:
  
  # 3. 当域名列表或脚本本身被修改并推送到仓库时触发
  push:
    paths:
      - '.github/workflows/main.yml'
      - 'generate_from_domains.py'
      - 'domains.txt' # <-- 关键：当您修改域名列表时，会自动触发更新

# 定义工作任务
jobs:
  build-and-commit:
    # 指定运行环境
    runs-on: ubuntu-latest

    # 任务步骤
    steps:
      # 步骤 1: 检出（下载）你的仓库代码
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 步骤 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 步骤 3: 运行主脚本 (从 domains.txt 生成链接)
      - name: Run Python script to generate links
        run: python generate_from_domains.py

      # 步骤 4: 提交并推送生成的订阅文件
      - name: Commit and Push new subscription file
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@github.com"
          
          git add vless_links.txt
          
          # 检查文件是否有实际变化，以避免空的提交记录
          if git diff --staged --quiet; then
            echo "✅ Subscription file is already up-to-date. No commit needed."
          else
            # 如果文件内容已更新，则创建提交并推送到仓库
            git commit -m "🚀 Auto-update VLESS subscription from domains.txt"
            git push
          fi
